"""
Django settings for year3 project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import datetime
import dj_database_url

DEBUG_MODE = True

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent             #MAIN BASEDIR

#---------------------------------TESTING----------------------------------------
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR,"templates")
#--------------------------------------------------------------------------------


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lvmv%!as*-*mh#s69am))4x#&f0vkqy(-i0wd4*(t=qnh!oj%9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if (DEBUG_MODE == True) else False

ALLOWED_HOSTS = ['27.71.227.1', 'localhost', '.vercel.app']
#'10.14.50.95', '127.0.0.1', '*'

# Application definition

INSTALLED_APPS = [
    #__________________testing for Websocket testing____________________
    # 'api.apps.ApiConfig',
    #___________________________________________________________________

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #internal apps
    'api',
    #external libraries
    'rest_framework',
    'corsheaders', #add this for error not being able to call API from django
    'rest_framework.authtoken',     #need this app to handle token database for us and create view for handling token for us
    'rest_framework_simplejwt',     #this is simplejwt for managing token-authentication for us
]


"""
*brief: this is to declare that "globally all of our API will be wrapped in  what kind of authenication
        and what kind of permission"
"""
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework_simplejwt.authentication.JWTAuthentication',    #simplejwt third party
#         # 'rest_framework.authentication.TokenAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ]
# } 

"""
*brief: this is to declare the time expiring of the access-token and refreshing token of simplejwt application
"""

SIMPLE_JWT = {
    # It will work instead of the default serializer(TokenObtainPairSerializer).
    "TOKEN_OBTAIN_SERIALIZER": "api.serializers.MyTokenObtainPairSerializer",
    "ACCESS_TOKEN_LIFETIME": datetime.timedelta(hours=10),
    "REFRESH_TOKEN_LIFETIME": datetime.timedelta(hours=20),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #-------------------------------------------------------
    'corsheaders.middleware.CorsMiddleware',#add this for error not being able to call API from django 
    #-------------------------------------------------------
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ALLOWED_HOSTS = ["*"]

CORS_ORIGIN_ALLOW_ALL = True    #add this to allow all host without cor-header to call to Django

#add this for error not being able to call API from django 
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",    #allow react server on local machine to call this django-server
    # "http://127.0.0.1:8080,"
]

#-------------------------------------------------------------------

ROOT_URLCONF = 'year3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'year3.wsgi.application'

#____________________Websocket________________________
# ASGI_APPLICATION = 'year3.routing.application'
ASGI_APPLICATION = "year3.asgi.application"

 
 
CHANNEL_LAYERS = {
    "default": {
        "BACKEND":
      "channels.layers.InMemoryChannelLayer",
    }
}
#_____________________________________________________



# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'smartfarm',
        'USER': 'year3',
        'PASSWORD': 'year3',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# DATABASES["default"] = dj_database_url.parse("postgres://smart_construction_user:mpuVa358yCcb8mkRKK5Nmpbb1md2OsLX@dpg-ckkkvhu6fcos73bjbsbg-a.singapore-postgres.render.com/smart_construction")

# postgres://smart_construction_user:mpuVa358yCcb8mkRKK5Nmpbb1md2OsLX@dpg-ckkkvhu6fcos73bjbsbg-a.singapore-postgres.render.com/smart_construction


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'    


print("Set up settings ...")


# INSERT INTO api_room (room_id, construction_name, x_length, y_length, information) VALUES (1, 'building', 18, 18, 'C1B 401');
# INSERT INTO api_registration (node_id, x_axis, y_axis, function, room_id) VALUES (1, 1, 1, 'sensor', 1);